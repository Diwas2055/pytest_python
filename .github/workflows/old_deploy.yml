name: Deploy on Docker Hub

on:
  push:
    branches:
      - test_deploy

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/realworld-example-app
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  DATE_TAG: $(date -I)
  DOCKERFILE_NAME: none

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - name: latest
            python_version: "3.11"
          - name: python3.11
            python_version: "3.11"
          - name: python3.10
            python_version: "3.10"
          - name: python3.9
            python_version: "3.9"
          - name: python3.8
            python_version: "3.8"
          - name: python3.7
            python_version: "3.7"
          - name: python3.11-slim
            python_version: "3.11"
          - name: python3.10-slim
            python_version: "3.10"
          - name: python3.9-slim
            python_version: "3.9"
          - name: python3.8-slim
            python_version: "3.8"
      fail-fast: true

    name: Build Container

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Dockerfile name
        if: matrix.image.name != 'latest'
        run: echo "DOCKERFILE_NAME=${{ matrix.image.name }}" >> $GITHUB_ENV

      - name: Set Dockerfile name for latest
        if: matrix.image.name == 'latest'
        run: echo "DOCKERFILE_NAME=python${{ matrix.image.python_version }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get date for tags
        run: echo "DATE_TAG=$(date -I)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ matrix.image.name }}
            ${{ env.IMAGE_NAME }}:${{ matrix.image.name }}-${{ env.DATE_TAG }}
          context: ./
          file: ./${{ env.DOCKERFILE_NAME }}.dockerfile

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.IMAGE_NAME }}

      - name: Build image and publish to registry
        run: |
          docker build -t $IMAGE_NAME:latest .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
          docker push $IMAGE_NAME:latest
