# name: Publish Docker Image

# on:
#   push:
#     branches:
#       - 'master'

# env:
#   IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/pytest-sample
#   DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

# jobs:
#   push_to_registry:
#     name: Push Docker Image to Docker Hub
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out the repository
#         uses: actions/checkout@v3
      
#       - name: Set the Dockerfile name for the latest
#         run: echo "DOCKERFILE_NAME=python3.11-slim" >> $GITHUB_ENV

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
      
#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ env.IMAGE_NAME }}
      
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
      
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           file: ./${{ env.DOCKERFILE_NAME }}.dockerfile
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}

#       - name: Inspect Docker image
#         run: docker image inspect ${{ env.IMAGE_NAME }}


name: Publish Docker Image

on:
  push:
    branches:
      - 'master'

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/pytest-sample
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  push_to_registry:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set the Dockerfile name for the latest
        run: echo "DOCKERFILE_NAME=python3.11-slim" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ env.DOCKERFILE_NAME }}.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Inspect Docker image
      #   run: docker image inspect ${{ env.IMAGE_NAME }}

  scan_image:
    name: Scan Docker Image for Vulnerabilities
    runs-on: ubuntu-latest
    needs: push_to_registry

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker image
        run: docker pull ${{ env.IMAGE_NAME }}:latest

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Scan Docker image
        run: trivy image ${{ env.IMAGE_NAME }}:latest
