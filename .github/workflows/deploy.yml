# name: Deploy on Docker Hub

# on:
#   push:
#     branches:
#       - master

# env:
#   IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/realworld-example-app
#   DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

# jobs:
#   build:
#     name: Build Container

#     runs-on: ubuntu-22.04

#     steps:
#       - uses: actions/checkout@v3

#       - name: Build image and publish to registry
#         run: |
#           docker build -t $IMAGE_NAME:latest .
#           echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
#           docker push $IMAGE_NAME:latest

name: Deploy on Docker Hub

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/realworld-example-app
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build_and_deploy:
    name: Build and Publish Container
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE_NAME:latest --push .

      - name: Tag and push previous image
        id: tag_and_push_previous
        run: |
          previous_tag=$(docker inspect --format='{{index .RepoTags 1}}' $IMAGE_NAME)
          if [ ! -z "$previous_tag" ]; then
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$previous_tag
            docker push $IMAGE_NAME:$previous_tag
          fi

      - name: Clean up Docker Buildx
        run: docker buildx rm
